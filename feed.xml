<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="https://aaronmack.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://aaronmack.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-01-09T04:26:46+00:00</updated><id>https://aaronmack.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">a post with giscus comments</title><link href="https://aaronmack.github.io/blog/2022/giscus-comments/" rel="alternate" type="text/html" title="a post with giscus comments"/><published>2022-12-10T15:59:00+00:00</published><updated>2022-12-10T15:59:00+00:00</updated><id>https://aaronmack.github.io/blog/2022/giscus-comments</id><content type="html" xml:base="https://aaronmack.github.io/blog/2022/giscus-comments/"><![CDATA[<p>This post shows how to add GISCUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><summary type="html"><![CDATA[an example of a blog post with giscus comments]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://aaronmack.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://aaronmack.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://aaronmack.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">My first blog - how to use Jekyll</title><link href="https://aaronmack.github.io/blog/2022/how-to-jekyll/" rel="alternate" type="text/html" title="My first blog - how to use Jekyll"/><published>2022-04-07T19:39:00+00:00</published><updated>2022-04-07T19:39:00+00:00</updated><id>https://aaronmack.github.io/blog/2022/how-to-jekyll</id><content type="html" xml:base="https://aaronmack.github.io/blog/2022/how-to-jekyll/"><![CDATA[<p><a href="https://jekyllrb.com/">Jekyll</a>可以帮助我们将<strong>*.md</strong> (Markdown)文件生成静态的网页来浏览。首先来看一下静态与动态的区别</p> <center> <div class="jekyll-diagrams diagrams graphviz"> Command Not Found: dot </div> </center> <p>如图中所示，如果是静态部署到GithubPages上去，需要先将我们的Markdown文件转成Html，再进行部署，如果是动态部署我们省略转成Html这一步；关于动态部署，参考<a href="https://docsify.js.org/">Docsify</a>，以及这里有我之前搭建的一个<a href="https://github.com/AAaronMack/aaaronmack.github.io">Docsify Template</a>,还有最终的一个<a href="https://aaaronmack.github.io/#/">效果</a>，其存储的大部分都是Markdown，而没有Html文件。但这也没有关系，Jekyll可以自动生成Html，总之静态与动态这两者各有优缺点。</p> <hr/> <h2 id="before-you-begin">Before You Begin</h2> <ol> <li> <p><a href="https://scoop.sh/">Scoop</a> - 一个Windows下的命令行安装程序，包含了我们日常生活中大部分的使用软件</p> </li> <li> <p><a href="https://www.msys2.org/">msys2</a> - 一组Windows下的工具和库</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c"># 如果你已经安装了scoop，则只需要简单的执行</span>
 scoop <span class="nb">install </span>msys2
</code></pre></div> </div> </li> <li> <p><a href="https://www.ruby-lang.org/en/">Ruby</a> - 一种动态编程语言</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c"># 如果你已经安装了scoop，则只需要简单的执行</span>
 scoop <span class="nb">install </span>ruby
</code></pre></div> </div> </li> </ol> <blockquote> <p><span style="color:red;font-weight:bold">Note</span></p> <ol> <li>在安装成功<code class="language-plaintext highlighter-rouge">msys2</code>后首先执行一次</li> <li>在完成上述三步后，还需要执行<code class="language-plaintext highlighter-rouge">ridk install</code>,如下图中所示的<mark>结果</mark></li> </ol> <div align="center"><img src="https://cdn.jsdelivr.net/gh/aaronmack/image-hosting@master/tech/jekyll-ridk-install.50u9c0il7o80.webp"/></div> </blockquote> <hr/> <h2 id="general-steps">General steps</h2> <ol> <li> <p>安装jekyll和bundler - bundler可以在某种程度上将其理解为为python的pip，包管理工具</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> gem <span class="nb">install </span>jekyll bundler
</code></pre></div> </div> </li> <li> <p>创建一个新的Jekyll网页，例如这里名称叫做<code class="language-plaintext highlighter-rouge">myblog</code></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> jekyll new myblog
</code></pre></div> </div> </li> <li> <p>在本地部署以及预览它的效果</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> bundle <span class="nb">exec </span>jekyll serve <span class="nt">--livereload</span>
</code></pre></div> </div> </li> </ol> <blockquote> <p>Note</p> <ol> <li><code class="language-plaintext highlighter-rouge">--livereload</code>命令行参数可以看到实时更改Markdown文件的效果，但对于<code class="language-plaintext highlighter-rouge">_config.yml</code>等一些文件则需要重新执行命令</li> </ol> </blockquote> <h3 id="advanced-steps">Advanced steps</h3> <p>在General steps中我们已经可以生成一个简单的网页，但如果想要更进一步，我们可以这样做</p> <ol> <li> <p>访问https://github.com/alshedivat/al-folio，将这个仓库Fork到我们的Github上 (这里是选择了一个Jekyll的主题，当然你也可以选择你喜欢的任何主题)</p> </li> <li> <p>重命名这个仓库名称为<code class="language-plaintext highlighter-rouge">&lt;your-github-username&gt;.github.io</code></p> </li> <li> <p>设置Github，有步骤 <code class="language-plaintext highlighter-rouge">Settings -&gt; Pages -&gt; Source</code>选择<em>gh-pages</em>,点击<em>Save</em>即可</p> </li> </ol> <p>根据自己的需要修改这个仓库中的文件，例如添加我们自己的的Blog，设置我们的个人主页等等;这个仓库已经配置好了诸如自动部署，自动构建等等所需要的步骤，这样每当我们有新的<strong>Commit</strong>提交的时候，都会自动进行的</p> <hr/> <h2 id="solve">Solve</h2> <p><strong>Error 1</strong> - in require: cannot load such file – rake (LoadError…</p> <ul> <li>这个是关于<a href="https://github.com/ruby/rake">rake</a>的错误，遇见这个错误时，可以通过尝试重新安装ruby解决，如果使用scoop的话，可以执行<code class="language-plaintext highlighter-rouge">scoop uninstall ruby</code>再执行<code class="language-plaintext highlighter-rouge">scoop install ruby</code></li> </ul> <p><br/></p> <p><strong>Error 2</strong> - github-pages build Failure</p> <div align="center"><img src="https://cdn.jsdelivr.net/gh/aaronmack/image-hosting@master/tech/jekyll-githubpages-build-faiure.1r87idn3bzfk.webp"/></div> <ul> <li>如图中那样，在部署到Github-pages后，遇到build(构建)错误,我这里使用的是Jekyll的<a href="https://github.com/alshedivat/al-folio">al-folio</a>这个主题,在<code class="language-plaintext highlighter-rouge">README.md</code>中提到，如果需要部署到Github-pages上时，需要将<code class="language-plaintext highlighter-rouge">_config.yml</code>中的<code class="language-plaintext highlighter-rouge">url</code>设置为我们的仓库地址，以及将<code class="language-plaintext highlighter-rouge">baseurl</code>留空。</li> </ul> <hr/> <center>Please feel free to contact me if you have any questions.😊</center> <hr/>]]></content><author><name></name></author><category term="tech"/><category term="jekyll"/><summary type="html"><![CDATA[An example of how to use Jekyll to generate personal home page]]></summary></entry><entry><title type="html">a post for test jekyll</title><link href="https://aaronmack.github.io/blog/2022/my-jekyll-learn/" rel="alternate" type="text/html" title="a post for test jekyll"/><published>2022-04-07T00:00:00+00:00</published><updated>2022-04-07T00:00:00+00:00</updated><id>https://aaronmack.github.io/blog/2022/my-jekyll-learn</id><content type="html" xml:base="https://aaronmack.github.io/blog/2022/my-jekyll-learn/"><![CDATA[<h1 id="redirect">Redirect</h1> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">a post with redirect</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2021-07-04 17:39:00</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">you can also redirect to assets like pdf</span>
<span class="na">redirect</span><span class="pi">:</span> <span class="s">/assets/pdf/example_pdf.pdf</span>
<span class="nn">---</span>

</code></pre></div></div> <h1 id="comments">Comments</h1> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">a post with comments</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2015-10-20 11:59:00-0400</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">an example of a blog post with comments</span>
<span class="na">comments</span><span class="pi">:</span> <span class="no">true</span>
<span class="na">categories</span><span class="pi">:</span> <span class="s">sample-posts external-services</span>
<span class="nn">---</span>
</code></pre></div></div> <h1 id="diagrams">Diagrams</h1> <p><a href="https://github.com/zhustec/jekyll-diagrams">Link🔗</a></p> <h2 id="mermaid">Mermaid</h2> <p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div> <p>The diagram below was generated by the following code:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div> <div class="jekyll-diagrams diagrams mermaid"> <svg id="mermaid-1673238407705" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1673238407705 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1673238407705 .node circle,#mermaid-1673238407705 .node ellipse,#mermaid-1673238407705 .node polygon,#mermaid-1673238407705 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1673238407705 .node.clickable{cursor:pointer}#mermaid-1673238407705 .arrowheadPath{fill:#333}#mermaid-1673238407705 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1673238407705 .edgeLabel{background-color:#e8e8e8}#mermaid-1673238407705 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1673238407705 .cluster text{fill:#333}#mermaid-1673238407705 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1673238407705 .actor{stroke:#ccf;fill:#ececff}#mermaid-1673238407705 text.actor{fill:#000;stroke:none}#mermaid-1673238407705 .actor-line{stroke:grey}#mermaid-1673238407705 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1673238407705 .messageLine0,#mermaid-1673238407705 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1673238407705 #arrowhead{fill:#333}#mermaid-1673238407705 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1673238407705 .messageText{fill:#333;stroke:none}#mermaid-1673238407705 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1673238407705 .labelText,#mermaid-1673238407705 .loopText{fill:#000;stroke:none}#mermaid-1673238407705 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1673238407705 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1673238407705 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1673238407705 .section{stroke:none;opacity:.2}#mermaid-1673238407705 .section0{fill:rgba(102,102,255,.49)}#mermaid-1673238407705 .section2{fill:#fff400}#mermaid-1673238407705 .section1,#mermaid-1673238407705 .section3{fill:#fff;opacity:.2}#mermaid-1673238407705 .sectionTitle0,#mermaid-1673238407705 .sectionTitle1,#mermaid-1673238407705 .sectionTitle2,#mermaid-1673238407705 .sectionTitle3{fill:#333}#mermaid-1673238407705 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1673238407705 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1673238407705 .grid path{stroke-width:0}#mermaid-1673238407705 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1673238407705 .task{stroke-width:2}#mermaid-1673238407705 .taskText{text-anchor:middle;font-size:11px}#mermaid-1673238407705 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1673238407705 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1673238407705 .taskText0,#mermaid-1673238407705 .taskText1,#mermaid-1673238407705 .taskText2,#mermaid-1673238407705 .taskText3{fill:#fff}#mermaid-1673238407705 .task0,#mermaid-1673238407705 .task1,#mermaid-1673238407705 .task2,#mermaid-1673238407705 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1673238407705 .taskTextOutside0,#mermaid-1673238407705 .taskTextOutside1,#mermaid-1673238407705 .taskTextOutside2,#mermaid-1673238407705 .taskTextOutside3{fill:#000}#mermaid-1673238407705 .active0,#mermaid-1673238407705 .active1,#mermaid-1673238407705 .active2,#mermaid-1673238407705 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1673238407705 .activeText0,#mermaid-1673238407705 .activeText1,#mermaid-1673238407705 .activeText2,#mermaid-1673238407705 .activeText3{fill:#000!important}#mermaid-1673238407705 .done0,#mermaid-1673238407705 .done1,#mermaid-1673238407705 .done2,#mermaid-1673238407705 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1673238407705 .doneText0,#mermaid-1673238407705 .doneText1,#mermaid-1673238407705 .doneText2,#mermaid-1673238407705 .doneText3{fill:#000!important}#mermaid-1673238407705 .crit0,#mermaid-1673238407705 .crit1,#mermaid-1673238407705 .crit2,#mermaid-1673238407705 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1673238407705 .activeCrit0,#mermaid-1673238407705 .activeCrit1,#mermaid-1673238407705 .activeCrit2,#mermaid-1673238407705 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1673238407705 .doneCrit0,#mermaid-1673238407705 .doneCrit1,#mermaid-1673238407705 .doneCrit2,#mermaid-1673238407705 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1673238407705 .activeCritText0,#mermaid-1673238407705 .activeCritText1,#mermaid-1673238407705 .activeCritText2,#mermaid-1673238407705 .activeCritText3,#mermaid-1673238407705 .doneCritText0,#mermaid-1673238407705 .doneCritText1,#mermaid-1673238407705 .doneCritText2,#mermaid-1673238407705 .doneCritText3{fill:#000!important}#mermaid-1673238407705 .titleText{text-anchor:middle;font-size:18px;fill:#000}
#mermaid-1673238407705 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1673238407705 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1673238407705 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1673238407705 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1673238407705 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1673238407705 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1673238407705 #compositionEnd,#mermaid-1673238407705 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1673238407705 #aggregationEnd,#mermaid-1673238407705 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1673238407705 #dependencyEnd,#mermaid-1673238407705 #dependencyStart,#mermaid-1673238407705 #extensionEnd,#mermaid-1673238407705 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1673238407705 .branch-label,#mermaid-1673238407705 .commit-id,#mermaid-1673238407705 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1673238407705{color:#000;font:normal normal 400 normal 16px / normal "Times New Roman"}</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg> </div> <h1 id="math">Math</h1> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\] <p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math. MathJax will automatically number equations:</p> <p>\begin{equation} \label{eq:cauchy-schwarz} \left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right) \end{equation}</p> <h1 id="code">Code</h1> <p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting. It supports more than 100 languages. This example is in C++. All you have to do is wrap your code in a liquid tag:</p> <p>{% highlight c++ linenos %} <br/> code code code <br/> {% endhighlight %}</p> <p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers. Produces something like this:</p> <figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <h1 id="images">Images</h1> <p>This is an example post with image galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all. </div> <p>Images can be made zoomable. Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/11.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <h1 id="formatting">Formatting</h1> <p>Use <a href="https://www.pinterest.com">Pinterest</a> DIY authentic Schlitz, hoodie Intelligentsia butcher trust fund brunch shabby chic Kickstarter forage flexitarian. Direct trade <a href="https://en.wikipedia.org/wiki/Cold-pressed_juice">cold-pressed</a> meggings stumptown plaid, pop-up taxidermy. Hoodie XOXO fingerstache scenester Echo Park. Plaid ugh Wes Anderson, freegan pug selvage fanny pack leggings pickled food truck DIY irony Banksy.</p> <h2 id="hipster-list">Hipster list</h2> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> <p>Text.</p> <hr/> <p>Text.</p> <blockquote> We do not grow absolutely, chronologically. We grow sometimes in one dimension, and not in another, unevenly. We grow partially. We are relative. We are mature in one realm, childish in another. —Anais Nin </blockquote> <h1 id="distill">Distill</h1> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look well in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p> <h2 id="table">Table</h2> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you’ll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/>]]></content><author><name>Aaron</name></author><summary type="html"><![CDATA[Test jekyll's functionality]]></summary></entry><entry><title type="html">a post with redirect</title><link href="https://aaronmack.github.io/blog/2022/redirect/" rel="alternate" type="text/html" title="a post with redirect"/><published>2022-02-01T17:39:00+00:00</published><updated>2022-02-01T17:39:00+00:00</updated><id>https://aaronmack.github.io/blog/2022/redirect</id><content type="html" xml:base="https://aaronmack.github.io/blog/2022/redirect/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[you can also redirect to assets like pdf]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://aaronmack.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post"/><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://aaronmack.github.io/blog/2021/distill</id><content type="html" xml:base="https://aaronmack.github.io/blog/2021/distill/"><![CDATA[<h2 id="equations">Equations</h2> <p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p> <p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p> \[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\] <p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p> <hr/> <h2 id="citations">Citations</h2> <p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag. The key attribute is a reference to the id provided in the bibliography. The key attribute can take multiple ids, separated by commas.</p> <p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover). If you have an appendix, a bibliography is automatically created and populated in it.</p> <p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover. However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p> <hr/> <h2 id="footnotes">Footnotes</h2> <p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag. The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p> <hr/> <h2 id="code-blocks">Code Blocks</h2> <p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags. An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>. For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p> <d-code block="" language="javascript"> var x = 25; function(x) { return x * x; } </d-code> <p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look good in the dark mode. You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p> <figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure> <hr/> <h2 id="interactive-plots">Interactive Plots</h2> <p>You can add interative plots using plotly + iframes :framed_picture:</p> <div class="l-page"> <iframe src="/assets/plotly/demo.html" frameborder="0" scrolling="no" height="500px" width="100%" style="border: 1px dashed grey;"></iframe> </div> <p>The plot must be generated separately and saved into an HTML file. To generate the plot that you see above, you can use the following code snippet:</p> <figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">plotly.express</span> <span class="k">as</span> <span class="n">px</span>
<span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span>
  <span class="s">'https://raw.githubusercontent.com/plotly/datasets/master/earthquakes-23k.csv'</span>
<span class="p">)</span>
<span class="n">fig</span> <span class="o">=</span> <span class="n">px</span><span class="p">.</span><span class="n">density_mapbox</span><span class="p">(</span>
  <span class="n">df</span><span class="p">,</span>
  <span class="n">lat</span><span class="o">=</span><span class="s">'Latitude'</span><span class="p">,</span>
  <span class="n">lon</span><span class="o">=</span><span class="s">'Longitude'</span><span class="p">,</span>
  <span class="n">z</span><span class="o">=</span><span class="s">'Magnitude'</span><span class="p">,</span>
  <span class="n">radius</span><span class="o">=</span><span class="mi">10</span><span class="p">,</span>
  <span class="n">center</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">lat</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">lon</span><span class="o">=</span><span class="mi">180</span><span class="p">),</span>
  <span class="n">zoom</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
  <span class="n">mapbox_style</span><span class="o">=</span><span class="s">"stamen-terrain"</span><span class="p">,</span>
<span class="p">)</span>
<span class="n">fig</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
<span class="n">fig</span><span class="p">.</span><span class="n">write_html</span><span class="p">(</span><span class="s">'assets/plotly/demo.html'</span><span class="p">)</span></code></pre></figure> <hr/> <h2 id="layouts">Layouts</h2> <p>The main text column is referred to as the body. It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p> <div class="fake-img l-body"> <p>.l-body</p> </div> <p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p> <div class="fake-img l-page"> <p>.l-page</p> </div> <p>All of these have an outset variant if you want to poke out from the body text a little bit. For instance:</p> <div class="fake-img l-body-outset"> <p>.l-body-outset</p> </div> <div class="fake-img l-page-outset"> <p>.l-page-outset</p> </div> <p>Occasionally you’ll want to use the full browser width. For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>. You can also inset the element a little from the edge of the browser by using the inset variant.</p> <div class="fake-img l-screen"> <p>.l-screen</p> </div> <div class="fake-img l-screen-inset"> <p>.l-screen-inset</p> </div> <p>The final layout is for marginalia, asides, and footnotes. It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p> <div class="fake-img l-gutter"> <p>.l-gutter</p> </div> <hr/> <h2 id="other-typography">Other Typography?</h2> <p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p> <p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p> <p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p> <p>Strikethrough uses two tildes. <del>Scratch this.</del></p> <ol> <li>First ordered list item</li> <li>Another item ⋅⋅* Unordered sub-list.</li> <li>Actual numbers don’t matter, just that it’s a number ⋅⋅1. Ordered sub-list</li> <li>And another item.</li> </ol> <p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p> <p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅ ⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅ ⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p> <ul> <li>Unordered list can use asterisks</li> <li>Or minuses</li> <li>Or pluses</li> </ul> <p><a href="https://www.google.com">I’m an inline-style link</a></p> <p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p> <p><a href="https://www.mozilla.org">I’m a reference-style link</a></p> <p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p> <p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p> <p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p> <p>URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes example.com (but not on Github, for example).</p> <p>Some text to show that the reference links can follow later.</p> <p>Here’s our logo (hover to see the title text):</p> <p>Inline-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1"/></p> <p>Reference-style: <img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2"/></p> <p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="s">"Python syntax highlighting"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting.
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div> <p>Colons can be used to align columns.</p> <table> <thead> <tr> <th>Tables</th> <th style="text-align: center">Are</th> <th style="text-align: right">Cool</th> </tr> </thead> <tbody> <tr> <td>col 3 is</td> <td style="text-align: center">right-aligned</td> <td style="text-align: right">$1600</td> </tr> <tr> <td>col 2 is</td> <td style="text-align: center">centered</td> <td style="text-align: right">$12</td> </tr> <tr> <td>zebra stripes</td> <td style="text-align: center">are neat</td> <td style="text-align: right">$1</td> </tr> </tbody> </table> <p>There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.</p> <table> <thead> <tr> <th>Markdown</th> <th>Less</th> <th>Pretty</th> </tr> </thead> <tbody> <tr> <td><em>Still</em></td> <td><code class="language-plaintext highlighter-rouge">renders</code></td> <td><strong>nicely</strong></td> </tr> <tr> <td>1</td> <td>2</td> <td>3</td> </tr> </tbody> </table> <blockquote> <p>Blockquotes are very handy in email to emulate reply text. This line is part of the same quote.</p> </blockquote> <p>Quote break.</p> <blockquote> <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p> </blockquote> <p>Here’s a line for us to start with.</p> <p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p> <p>This line is also a separate paragraph, but… This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with disqus comments</title><link href="https://aaronmack.github.io/blog/2015/disqus-comments/" rel="alternate" type="text/html" title="a post with disqus comments"/><published>2015-10-20T15:59:00+00:00</published><updated>2015-10-20T15:59:00+00:00</updated><id>https://aaronmack.github.io/blog/2015/disqus-comments</id><content type="html" xml:base="https://aaronmack.github.io/blog/2015/disqus-comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="external-services"/><summary type="html"><![CDATA[an example of a blog post with disqus comments]]></summary></entry></feed>